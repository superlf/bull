https://www.bilibili.com/video/BV1Fp4y1k7sX?p=3&spm_id_from=pageDriver

统一命名服务


【ZAB协议】
    ZK是通过Zab协议来保证分布式事务的最终一致性；
    支持崩溃恢复 的 原子广播协议，
    保证已经在Leader服务器上提交的事务被所有的服务器上提交
    丢弃只在Leader上提出而没有提交的事务。

【CAP】
    Conisitency:一致性（强一致性）
    Availability:可用性
    Partition Tolerance:分区容错性
【2PC】
    预提交
    收到超半数以上的ack
    异步提交 commit

【节点类型】
    1.持久节点：创建节点的客户端与zookeeper断开连接口，节点依旧存在。
    2.持久顺序节点：创建节点时，根据创建时间顺序给节点名称进行编号
    3.临时节点：断开连接后，节点会删除
    4.临时顺序节点

【分布式锁的实现】
    每一个客户端请求都在一个持久节点下创建一个临时顺序节点；
    然后判断该节点是否位于顺序的首位，是则获锁成功；
    不是的话监听Watcher前一个节点，进入等待；相当与java里的AQS

【分布式锁:zk和Redis对比】
    zk：优点：
            有封装好的框架容易实现；
            有等待队列，提高了抢锁的效率
        缺点：
            添加和删除节点的性能比较低；
    rd：优点：
            set和Del指令性能高
        缺点：
            实现复杂需要考虑超时/原子性/误删的情况；
            没有等待锁的队列，只能在客户端自旋，效率低；









